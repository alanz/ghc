\begin{code}
module RnExpr where
import HsSyn
import Name       ( Name )
import NameSet    ( FreeVars )
import RdrName    ( RdrName )
import TcRnTypes
import SrcLoc     ( Located, GenLocated )
import Outputable ( Outputable )

rnLExpr :: LHsExpr l RdrName
        -> RnM l (LHsExpr l Name, FreeVars)

rnStmts :: --forall thing body.
           Outputable (body RdrName) => HsStmtContext Name 
        -> (Located (body RdrName) -> RnM l (GenLocated l (body Name),FreeVars))
        -> [LStmt l RdrName (GenLocated l (body RdrName))]
        -> ([Name] -> RnM l (thing, FreeVars))
        -> RnM l (([LStmt l Name (GenLocated l (body Name))], thing), FreeVars)
\end{code}

