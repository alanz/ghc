\begin{code}
module Match where
import Var      ( Id )
import TcType   ( Type )
import DsMonad  ( DsM, EquationInfo, MatchResult )
import CoreSyn  ( CoreExpr )
import HsSyn    ( LPat, HsMatchContext, MatchGroup, LHsExpr )
import Name     ( Name )
import SrcLoc   ( ApiAnnotation )

match   :: (ApiAnnotation l)
        => [Id]
        -> Type
        -> [EquationInfo l]
        -> DsM l (MatchResult l)

matchWrapper :: (ApiAnnotation l)
        => HsMatchContext Name
        -> MatchGroup l Id (LHsExpr l Id)
        -> DsM l ([Id], CoreExpr)

matchSimply :: (ApiAnnotation l)
        => CoreExpr
        -> HsMatchContext Name
        -> LPat l Id
        -> CoreExpr
        -> CoreExpr
        -> DsM l CoreExpr

matchSinglePat :: (ApiAnnotation l)
        => CoreExpr
        -> HsMatchContext Name
        -> LPat l Id
        -> Type
        -> MatchResult l
        -> DsM l (MatchResult l)
\end{code}
