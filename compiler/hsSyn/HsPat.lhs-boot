\begin{code}
{-# LANGUAGE CPP, KindSignatures #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE UndecidableInstances #-} -- Note [Pass sensitive types]
                                      -- in module PlaceHolder
{-# LANGUAGE ConstraintKinds #-}
#if __GLASGOW_HASKELL__ > 706
{-# LANGUAGE RoleAnnotations #-}
#endif

module HsPat where
import SrcLoc( GenLocated )

import Data.Data hiding (Fixity)
import Outputable
import PlaceHolder      ( DataId )

#if __GLASGOW_HASKELL__ > 706
type role Pat nominal nominal
#endif
data Pat (l :: *) (i :: *)
type LPat l i = GenLocated l (Pat l i)

#if __GLASGOW_HASKELL__ > 706
instance Typeable Pat
#else
instance Typeable1 Pat
#endif

instance (DataId id, Data l) => Data (Pat l id)
instance (OutputableBndr name, Outputable l) => Outputable (Pat l name)
\end{code}
