\begin{code}
module TcMatches where
import HsSyn    ( GRHSs, MatchGroup, LHsExpr )
import TcEvidence( HsWrapper )
import Name     ( Name )
import TcType   ( TcRhoType,TcSigmaType )
import TcRnTypes( TcM, TcId )
import SrcLoc   ( ApiAnnotation )

tcGRHSsPat    :: (ApiAnnotation l) => GRHSs l Name (LHsExpr l Name)
              -> TcRhoType
              -> TcM l (GRHSs l TcId (LHsExpr l TcId))

tcMatchesFun :: (ApiAnnotation l) => Name -> Bool
             -> MatchGroup l Name (LHsExpr l Name)
             -> TcSigmaType     -- Expected type of function
             -> TcM l (HsWrapper, MatchGroup l TcId (LHsExpr l TcId))

\end{code}
